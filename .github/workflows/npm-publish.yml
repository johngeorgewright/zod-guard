name: Publish

on:
  push:
    branches: [master]

jobs:
  publish-test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    steps:
      - name: Checkout project
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Restore cache
        uses: actions/cache@v3
        id: cache
        with:
          path: |
            .yarn/unplugged
            .yarn/install-state.gz
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-

      - name: Yarn
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --immutable

      - name: Test
        run: yarn test

  publish-npm:
    name: NPM
    needs: [publish-test]
    runs-on: ubuntu-latest
    environment: NPM
    steps:
      - name: Checkout project
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PUSH_TOKEN }}

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc

      - name: Setup Registries
        run: |
          yarn config set --home 'npmRegistries["https://registry.npmjs.org"].npmAuthToken' '${{ secrets.NPM_TOKEN }}'
          yarn config set --home npmPublishRegistry https://registry.npmjs.org

      - name: Restore cache
        uses: actions/cache@v3
        id: cache
        with:
          path: |
            .yarn/unplugged
            .yarn/install-state.gz
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-

      - name: Yarn
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --immutable

      - name: Build
        run: yarn build

      - name: Release
        run: yarn semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
